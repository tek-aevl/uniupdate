#!/bin/bash
echo "#c.65# To use this in cli use"
echo "sudo nano /bin/usr/kernelchk
# copy the next 3 lines into it with, and chmod it to 755  
#!/bin/bash
bash <(curl -s https://git.aevl.net/tek/umupdate/raw/branch/main/kernelchk)
echo 'end of kernelchk'
#To use run
bash kernelchk
";echo "Sleeping for 4";sleep 4

#Setting Text Colors
RED='\033[0;31m'       # Red color
YELLOW='\033[0;33m'    # Yellow color
GREEN='\033[0;32m'     # Green color
BLUE='\033[0;34m'         # Blue color
MAGENTA='\033[0;35m'      # Magenta color
WHITE='\033[0;37m'        # White color
NC='\033[0m'           # No color
echo "Hello "$USER" I am "$HOSTNAME" let's begin!"
echo "Kernel linux-zen version check"
uname -a

echo -e "This ${RED}text${NC} is ${RED}Red.${NC}"
echo -e "This ${YELLOW}text${NC} is ${YELLOW}Yellow.${NC}"
echo -e "This ${GREEN}text${NC} is ${GREEN}Green.${NC}"
echo -e "This ${MAGENTA}text${NC} is ${MAGENTA}Magenta.${NC}"
echo -e "This ${BLUE}text${NC} is ${BLUE}Blue.${NC}"
echo -e "This ${WHITE}text${NC} is ${WHITE}White.${NC}"


#arch
#running_kernel=$(uname -r | sed 's/-zen$//;s/-/./')
#installed_kernel=$(pacman -Qi linux-zen | awk '/Version/ {print $3}')
#debian
#running_kernel=$(uname -r)
#installed_kernel=$(dpkg -l | grep linux-image | awk '{print $2}' | grep -E "^[0-9]+\.[0-9]+\.[0-9]+-[0-9]+" | head -n 1)

if [ -f /etc/debian_version ]; then
    # Ubuntu/Debian
    running_kernel=$(uname -r)
    installed_kernel=$(dpkg -l | grep linux-image | awk '{print $2}' | grep -E "^[0-9]+\.[0-9]+\.[0-9]+-[0-9]+" | head -n 1)
else
    # Arch Linux
    running_kernel=$(uname -r | sed 's/-zen$//;s/-/./')
    installed_kernel=$(pacman -Qi linux-zen | awk '/Version/ {print $3}')
fi

uptime=$(uptime -p)



uptime=$(uptime -p)

function version_compare() {
    if [[ $1 == $2 ]]; then
        echo -e "equal"
    elif [[ $1 < $2 ]]; then
        echo -e "less"
    else
        echo -e "greater"
    fi
}

comparison_result=$(version_compare "$running_kernel" "$installed_kernel")

echo -e "${BLUE}Comparison Result:${BLUE} $comparison_result ${NC}"

if [[ "$comparison_result" != "equal" ]]; then
        echo -e "${GREEN}Running Kernel: $running_kernel${NC}"
        echo -e "${RED}Installed Kernel: $installed_kernel${NC}"
        echo -e "${MAGENTA}System Uptime: $uptime${NC}"
        echo -e "${YELLOW}Running kernel does not ${RED}match${NC} the installed kernel."
        echo -e "${RED}You SHOULD reboot the system or reload the kernel. Asap!${NC}"
        echo -e "${YELLOW}!=${NC}"
        sleep 5
elif [[ $uptime == *"day"* ]]; then
    days=$(echo $uptime | awk '{print $2}')
    if (( days > 6 )); then
        echo -e "${BLUE}Running Kernel: $running_kernel${NC}"
        echo -e "${BLUE}Installed Kernel: $installed_kernel${NC}"
        echo -e "${RED}System Uptime: $uptime${NC}"
        echo -e "${GREEN}Running kernel matches installed kernel${NC}, but the system has been running for $uptime."
        echo -e "It is ${YELLOW}recommended${NC} to ${YELLOW}reboot${NC} the system."
        echo -e "${RED}=>6${NC}"
        sleep 5
   else
        echo -e "${GREEN}Running Kernel: $running_kernel${NC}"
        echo -e "${GREEN}Installed Kernel: $installed_kernel${NC}"
        echo -e "${MAGENTA}System Uptime: $uptime${NC}"
        echo -e "${GREEN}Running kernel${NC} matches ${GREEN}installed kernel${NC} and the system has been running for $uptime."
        echo -e "${GREEN}Rebooting ${NC}is ${GREEN}unnecessary${NC} at this time."
        echo -e "${YELLOW}=<6${NC}"
        sleep 5
    fi
else
        echo -e "${GREEN}Running Kernel: $running_kernel${NC}"
        echo -e "${GREEN}Installed Kernel: $installed_kernel${NC}"
        echo -e "${MAGENTA}System Uptime: $uptime${NC}"
        echo -e "Running kernel matches installed kernel and the system has been running for $uptime."
        echo -e "${GREEN}All Checks PASSED.${NC}"
        echo -e "${GREEN}=&<6${NC}"
        sleep 5
fi
echo "finisher"
sleep 6